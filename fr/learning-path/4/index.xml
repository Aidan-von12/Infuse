<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Principes fondamentaux de la sécurité des applications Web on Infuse</title><link>https://infuse.quest/fr/learning-path/4/</link><description>Recent content in Principes fondamentaux de la sécurité des applications Web on Infuse</description><generator>Hugo</generator><language>fr</language><atom:link href="https://infuse.quest/fr/learning-path/4/index.xml" rel="self" type="application/rss+xml"/><item><title>Infrastructure Vulnerabilities</title><link>https://infuse.quest/fr/learning-path/4/module-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://infuse.quest/fr/learning-path/4/module-1/</guid><description>Use Case While this learning path focuses on web application security, web applications run on top of numerous pieces of software infrastructure. Any vulnerability in the application’s underlying infrastructure will compromise the application. Understanding some infrastructure security is therefore part of understanding application security.
When inspecting a web application either for purposes of vulnerability assessment, security monitoring, or to investigate a compromise, the practitioner must understand the underlying stack of technology which provides the necessary environment for the application to run while looking for vulnerabilities in that stack.</description></item><item><title>Introduction</title><link>https://infuse.quest/fr/learning-path/4/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://infuse.quest/fr/learning-path/4/introduction/</guid><description>Présentation
Il existe de nombreuses façons pour les cybercriminels de tenter d&amp;rsquo;attaquer des sites Web, notamment :
Déni d&amp;rsquo;expression : retrait du site Web, diffamation du site Web, déni de service Accès aux données sensibles : exploitation des contrôles d&amp;rsquo;accès ou d&amp;rsquo;autres vulnérabilités pour accéder aux informations, par exemple dans les bases de données d&amp;rsquo;applications, les fichiers ou systèmes privés, les boîtes de réception privées ou les zones réservées aux membres Implantation de logiciels malveillants (attaques de « point d&amp;rsquo;eau ») : utilisation de l&amp;rsquo;accès à un site Web pour placer du code malveillant ou trompeur dans le but d&amp;rsquo;atteindre des objectifs sur les appareils des visiteurs Déplacement latéral (compromettant d&amp;rsquo;autres systèmes) : accès à des serveurs entiers, à une infrastructure en cloud, ou à une infrastructure de bureau ou à domicile Surveillance des visiteurs : obtention d&amp;rsquo;informations sur les adresses IP ou l&amp;rsquo;identité des visiteurs d&amp;rsquo;un site Web ou des utilisateurs d&amp;rsquo;une application Web Compromission de la chaîne d&amp;rsquo;approvisionnement : compromission des services de distribution de logiciels, des processus de construction de logiciels ou des bibliothèques de composants de logiciels afin d&amp;rsquo;atteindre des objectifs malveillants affectant les utilisateurs du logiciel ciblé Usurpation d&amp;rsquo;identité de sites Web : à des fins d&amp;rsquo;hameçonnage, de ternissement de la réputation et de distribution de logiciels malveillants/espions Injection de trafic (attaques de déclassement) : exploitation des faiblesses de configuration de l&amp;rsquo;infrastructure ou des communications dans le but d&amp;rsquo;insérer du contenu malveillant dans un trafic autrement correct La sécurité des applications Web est un domaine de connaissances techniques approfondies avec de nombreux domaines de spécialisation.</description></item><item><title>Data Validation</title><link>https://infuse.quest/fr/learning-path/4/module-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://infuse.quest/fr/learning-path/4/module-2/</guid><description>Use Case A common class of web application vulnerabilities relates to the way the app processes data supplied by users of the site. This class of vulnerabilities is commonly used by attackers to completely take over target websites, and often can be discovered via automated techniques. Understanding the mechanisms for data validation vulnerabilities is also extremely useful for demystifying complex security topics.
Objectives After completing this subtopic, practitioners should be able to do the following:</description></item><item><title>Authentication</title><link>https://infuse.quest/fr/learning-path/4/module-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://infuse.quest/fr/learning-path/4/module-3/</guid><description>Use Case In any website that has user logins, it’s important that the site protects user accounts from unauthorized access, and also that the account credentials themselves are protected. This subtopic outlines the most common areas of authentication where web application flaws appear.
Objectives After completing this subtopic, practitioners should be able to do the following:
Understand common types of authentication vulnerabilities Understand the potential impacts of those types of vulnerabilities Understand the mechanisms by which those vulnerabilities work Understand, in broad strokes, how those vulnerabilities can be prevented Authentication is the process by which a user of a system proves that they are who they claim they are.</description></item><item><title>Authorization</title><link>https://infuse.quest/fr/learning-path/4/module-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://infuse.quest/fr/learning-path/4/module-4/</guid><description>Use Case In any website that has users with different levels of capabilities (e.g. viewers vs editors) or that holds confidential information for users, it’s important that the site protects these features and/or this data from people who don’t have permission to use these features and/or interact with this data.
Objectives After completing this subtopic, practitioners should be able to do the following:
Understand common types of authorization vulnerabilities Understand the potential impacts of those types of vulnerabilities Understand the mechanisms by which those vulnerabilities work Understand, in broad strokes, how those vulnerabilities can be prevented Foundation Knowledge Authorization is the process of making sure that a user of a system has permission to perform an action or create/read/edit/delete a piece of data in that system, and preventing these actions if the user doesn’t have permission.</description></item><item><title>Application Logic</title><link>https://infuse.quest/fr/learning-path/4/module-5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://infuse.quest/fr/learning-path/4/module-5/</guid><description>Use Case In any interactive website that puts constraints on the types of actions that users can perform, it’s important that the site properly enforces those constraints to prevent unintended (and potentially) damaging actions by malicious users.
Objectives After completing this subtopic, practitioners should be able to do the following:
Understand the concept of application logic vulnerabilities Identify and understand common subclasses of application logic vulnerabilities, including: Client-side controls Lack of rate limiting/multiple submissions Rounding inconsistencies Skipping process steps Cross-site request forgery Application logic vulnerabilities (frequently called business logic vulnerabilities) are a loosely assembled class of vulnerabilities that relate to the processes that the application itself performs, as opposed to underlying vulnerabilities in the technologies that the application uses.</description></item><item><title>Interpersonal Skills for Web Application Security</title><link>https://infuse.quest/fr/learning-path/4/module-6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://infuse.quest/fr/learning-path/4/module-6/</guid><description>Use Case When interacting with individuals and organizations who operate web applications, self-awareness is necessary to check the nature of the digital protector relationship, provide useful and not fear-mongering advice or services. It is critical to frame your technical work within a sound risk assessment of the reality of the web application and its users.
Objectives After completing this subtopic, practitioners should be able to do the following:
Self reflect on the digital protector relationship with a client within web application assessment work and reporting Simplify and filter findings and explain them in a way which makes sense to the needs and threat models of the organization and its stakeholders Maintain an awareness of the limits of your own knowledge and ability Communicate in a non fear-mongering way about vulnerabilities and weaknesses Conduct a broader risk analysis of a web application based on the political, social, economic, and technical realities which surround it.</description></item></channel></rss>